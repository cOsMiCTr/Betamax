
  [
    {
      "name": "Entry page",
      "method": "GET",
      "query": "/",
      "description": "Welcome page!",
      "required": "nothing",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/",
      "status": [{ "code": "200", "response": "json" }],
      "json": "{ <br> &nbsp; Title: { type: String, required: true },<br> &nbsp; Description: { type: String, required: true },<br> &nbsp; Genre: {<br> &ensp; Name: String,<br> &ensp; Description: String,<br> &nbsp; },<br> &nbsp; Director: {<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br> &nbsp; },<br> &nbsp; Actors: [String],<br> &nbsp; ReleaseDate: Date,<br> &nbsp; ImageUrl: String,<br> &nbsp; Featured: Boolean,<br>}"
    },
    {
      "name": "Get ALL Movies",
      "method": "GET",
      "query": "/movies",
      "description": "Lists all the movies in the databes",
      "required": "nothing",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies",
      "status": [
        { "code": "201", "response": "json" },
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "{ <br> &nbsp; Title: { type: String, required: true },<br> &nbsp; Description: { type: String, required: true },<br> &nbsp; Genre: {<br> &ensp; Name: String,<br> &ensp; Description: String,<br> &nbsp; },<br> &nbsp; Director: {<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br> &nbsp; },<br> &nbsp; Actors: [String],<br> &nbsp; ReleaseDate: Date,<br> &nbsp; ImageUrl: String,<br> &nbsp; Featured: Boolean,<br>}"

    },
    {
      "name": "Get Movies by title",
      "method": "GET",
      "query": "/movies/:title",
      "description": "You can see all the movies in the database",
      "required": "Title of the movie. e.g. Inception",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies/Inception",
      "status": [
        { "code": "400", "response": "Can't find a movie with that Title!" }
      ],
      "json": "{ <br> &nbsp; Title: { type: String, required: true },<br> &nbsp; Description: { type: String, required: true },<br> &nbsp; Genre: {<br> &ensp; Name: String,<br> &ensp; Description: String,<br> &nbsp; },<br> &nbsp; Director: {<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br> &nbsp; },<br> &nbsp; Actors: [String],<br> &nbsp; ReleaseDate: Date,<br> &nbsp; ImageUrl: String,<br> &nbsp; Featured: Boolean,<br>}"

    },
    {
      "name": "Filter Movies with a specific Genre",
      "method": "GET",
      "query": "/movies/genre/:genre",
      "description": "Lists all the movies according to the given genre",
      "required": "a valid Genre. e.g. Action",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies/genre/Action",
      "status": [
        { "code": "201", "response": "json" },
        { "code": "400", "response": "Can't find a movie with that genre!" }
      ],
      "json": "{ <br> &nbsp; Title: { type: String, required: true },<br> &nbsp; Description: { type: String, required: true },<br> &nbsp; Genre: {<br> &ensp; Name: String,<br> &ensp; Description: String,<br> &nbsp; },<br> &nbsp; Director: {<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br> &nbsp; },<br> &nbsp; Actors: [String],<br> &nbsp; ReleaseDate: Date,<br> &nbsp; ImageUrl: String,<br> &nbsp; Featured: Boolean,<br>}"

    },
    {
      "name": "Filter Movies with Director",
      "method": "GET",
      "query": "/movies/directors/:directorname",
      "description": "You can filter the movies which are directed ny the looked up director",
      "required": "a valid name of a Director. e.g. Christopher Nolan",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies/directors/Christopher%20Nolan",
      "status": [
        { "code": "200", "response": "json" },
        { "code": "400", "response": "Can't find a director with that name!" }
      ],
      "json": "{ <br> &nbsp; Title: { type: String, required: true },<br> &nbsp; Description: { type: String, required: true },<br> &nbsp; Genre: {<br> &ensp; Name: String,<br> &ensp; Description: String,<br> &nbsp; },<br> &nbsp; Director: {<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br> &nbsp; },<br> &nbsp; Actors: [String],<br> &nbsp; ReleaseDate: Date,<br> &nbsp; ImageUrl: String,<br> &nbsp; Featured: Boolean,<br>}"

    },
    {
      "name": "Director info by name",
      "method": "GET",
      "query": "/movies/directors/info/:director name",
      "description": "Fetches the personal information about the director",
      "required": "a valid name of a Director. e.g. Christopher Nolan",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies/directors/info/Christopher%20Nolan",
      "status": [
        { "code": "200", "response": "json" },
        { "code": "400", "response": "Can't find a director with that name!" }
      ],
      "json": "{<br> &nbsp; Name: String,<br> &nbsp; Bio: String,<br> &nbsp; BirthYear: Number,<br> &nbsp; DeathYear: Number<br>}"

    },
    {
      "name": "Image link by title",
      "method": "GET",
      "query": "/movies/:title/image/",
      "description": "Retrieves the image link of the movie",
      "required": "Title of the movie. e.g. Inception",
      "usedCollections": ["movies"],
      "example": "http://localhost:8080/movies/Inception/image/",
      "status": [
        { "code": "201", "response": "json" },
        { "code": "400", "response": "Can't find a movie with that title!" }
      ],
      "json": "{<br> &nbsp; ImageUrl: String<br>}"

    },
    {
      "name": "List all users",
      "method": "GET",
      "query": "/users/all",
      "description": "Returns the list of users at the databank",
      "required": "Title of the movie. e.g. Inception",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users/all",
      "status": [
        { "code": "201", "response": "json of all users" },
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "{<br> &nbsp; Username: { type: String, required: true }, <br> &nbsp; Password: { type: String, required: true }, <br> &nbsp; Email: { type: String, required: true }, <br> &nbsp; Birthday: Date, <br> &nbsp; FavoriteMovies: [{ String }]<br>}"

    },
    {
      "name": "User by Username",
      "method": "GET",
      "query": "/users/:Username",
      "description": "Returns the user from the given Username from the databank",
      "required": "Username of a user. e.g. Test",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users/Test",
      "status": [
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "{<br> &nbsp; Username: { type: String, required: true }, <br> &nbsp; Password: { type: String, required: true }, <br> &nbsp; Email: { type: String, required: true }, <br> &nbsp; Birthday: Date, <br> &nbsp; FavoriteMovies: [{ String }]<br>}"

    },
    {
      "name": "Add new user",
      "method": "POST",
      "query": "/users",
      "description": "Adds a new user with a new UUID (v4) to the databank",
      "required": "nothing",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users",
      "status": [
        { "code": "201", "response": "req.body.Username + \" already exists\"" },
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "{<br> &nbsp; Username: { type: String, required: true }, <br> &nbsp; Password: { type: String, required: true }, <br> &nbsp; Email: { type: String, required: true }, <br> &nbsp; Birthday: Date, <br> &nbsp; FavoriteMovies: [{ String }]<br>}"

    },
    {
      "name": "Update new user",
      "method": "PUT",
      "query": "/users/:Username",
      "description": "Updates the user with the given Username",
      "required": "Username of a user. e.g. Test",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users/Test",
      "status": [
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "not JSON"

    },
    {
      "name": "Delete an existing user",
      "method": "DELETE",
      "query": "/users/:Username",
      "description": "Delete an existing user with the given Username",
      "required": "Username of a user. e.g. Test",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users/Test",
      "status": [
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "not JSON"

      
    },
    {
      "name": "Add FavMovie to user",
      "method": "POST",
      "query": "/users/:Username/:movieTitle",
      "description": "Add a movie from the given movie title to the users favorite movies list with the given Username",
      "required": "Username and a movie title. e.g. Test/Inception",
      "usedCollections": ["movies", "users"],
      "example": "http://localhost:8080/users/Test/Inception",
      "status": [
        { "code": "200", "response": "req.params.Username + ' was deleted.'" },
        { "code": "400", "response": "req.params.Username + ' was not found'" },
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "not JSON"

    },
    {
      "name": "Delete FavMovie from user",
      "method": "DELETE",
      "query": "/users/:Username/:movieTitle",
      "description": "Delete the movie from the users favorite movie list from the given movie title with the given Username",
      "required": "Username and a movie title. e.g. Test/Inception",
      "usedCollections": ["users"],
      "example": "http://localhost:8080/users/1/Inception",
      "status": [
        { "code": "500", "response": "Internal Server Error" }
      ],
      "json": "not JSON"
    }
  ]

